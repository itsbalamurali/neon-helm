apiVersion: apps/v1
kind: Deployment
metadata:
  name: compute-node
  labels:
    {{- include "neon.labels" . | nindent 4 }}
    app: compute-node
spec:
  replicas: 1
  selector:
    matchLabels:
      app: compute-node
  template:
    metadata:
      labels:
        app: compute-node
    spec:
      initContainers:
      - name: safekeeper-wait
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup safekeeper-0.safekeeper.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for safekeeper; sleep 2; done"]
      - name: pageserver-wait
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup pageserver.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for pageserver; sleep 2; done"]
      containers:
        - name: compute-node
          image: {{ .Values.computeNode.image.repository }}:{{ .Values.computeNode.image.tag }}
          imagePullPolicy: {{ .Values.computeNode.image.pullPolicy }}
          command: ["compute_ctl",
          "-D","/var/db/postgres/compute",
          "-C", "postgresql://cloud_admin@0.0.0.0:55433/postgres",
          "-b", "/usr/local/bin/postgres",
          "-r","{\"bucket\":\"neon-dev-extensions-eu-central-1\",\"region\":\"eu-central-1\"}",
          "--spec-path", "/var/compute/config/spec.json"]
          ports:
            - containerPort: 3080
            - containerPort: 55433
          volumeMounts:
            - name: computespec-volume
              mountPath: /var/compute/config
          resources:
            {{- toYaml .Values.computeNode.resources | nindent 12}}
      volumes:
        - name: computespec-volume
          configMap:
            name: computespec
            items:
              - key: spec.json
                path: spec.json
---
apiVersion: v1
kind: Service
metadata:
  name: compute-node
spec:
  selector:
    app: compute-node
  ports:
    - name: http
      port: 3080
      targetPort: 3080
    - name: db
      port: 55433
      targetPort: 55433
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: computespec
data:
  spec.json: |
    {
      "format_version": 1.0,
      "tenant_id": "9ef87a5bf0d92544f6fafeeb3239695c",
      "timeline_id": "de200bd42b49cc1814412c7e592dd6e9",
      "cluster": {
        "roles": [
          {
            "name": "postgres"
          }
        ],
        "databases": [
          {
            "name": "neondbtest",
            "owner": "postgres"
          }
        ],
        "settings": [
            {
                "name": "fsync",
                "value": "off",
                "vartype": "bool"
            },
            {
                "name": "wal_level",
                "value": "logical",
                "vartype": "enum"
            },
            {
                "name": "wal_log_hints",
                "value": "on",
                "vartype": "bool"
            },
            {
                "name": "log_connections",
                "value": "on",
                "vartype": "bool"
            },
            {
                "name": "port",
                "value": "55433",
                "vartype": "integer"
            },
            {
                "name": "shared_buffers",
                "value": "1MB",
                "vartype": "string"
            },
            {
                "name": "max_connections",
                "value": "100",
                "vartype": "integer"
            },
            {
                "name": "listen_addresses",
                "value": "0.0.0.0",
                "vartype": "string"
            },
            {
                "name": "max_wal_senders",
                "value": "10",
                "vartype": "integer"
            },
            {
                "name": "max_replication_slots",
                "value": "10",
                "vartype": "integer"
            },
            {
                "name": "wal_sender_timeout",
                "value": "5s",
                "vartype": "string"
            },
            {
                "name": "wal_keep_size",
                "value": "0",
                "vartype": "integer"
            },
            {
                "name": "password_encryption",
                "value": "md5",
                "vartype": "enum"
            },
            {
                "name": "restart_after_crash",
                "value": "off",
                "vartype": "bool"
            },
            {
                "name": "synchronous_standby_names",
                "value": "walproposer",
                "vartype": "string"
            },
            {
                "name": "shared_preload_libraries",
                "value": "neon",
                "vartype": "string"
            },
            {
                "name": "neon.safekeepers",
                "value": "safekeeper-0.safekeeper.{{.Release.Namespace}}.svc.cluster.local:5454,safekeeper-1.safekeeper.{{.Release.Namespace}}.svc.cluster.local:5454,safekeeper-2.safekeeper.{{.Release.Namespace}}.svc.cluster.local:5454",
                "vartype": "string"
            },
            {
                "name": "neon.timeline_id",
                "value": "de200bd42b49cc1814412c7e592dd6e9",
                "vartype": "string"
            },
            {
                "name": "neon.tenant_id",
                "value": "9ef87a5bf0d92544f6fafeeb3239695c",
                "vartype": "string"
            },
            {
                "name": "neon.pageserver_connstring",
                "value": "host=pageserver.{{.Release.Namespace}}.svc.cluster.local port=6400",
                "vartype": "string"
            },
            {
                "name": "max_replication_write_lag",
                "value": "500MB",
                "vartype": "string"
            },
            {
                "name": "max_replication_flush_lag",
                "value": "10GB",
                "vartype": "string"
            }
        ]
      },
      "pageserver_connstring": "host=pageserver.{{.Release.Namespace}}.svc.cluster.local port=6400",
      "safekeeper_connstrings": [
        "safekeeper-0.safekeeper.{{.Release.Namespace}}.svc.cluster.local:5454",
        "safekeeper-1.safekeeper.{{.Release.Namespace}}.svc.cluster.local:5454",
        "safekeeper-2.safekeeper.{{.Release.Namespace}}.svc.cluster.local:5454"
      ]
    }
