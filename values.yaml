# Default values for neon.
# This is a YAML-formatted file.
storage:
  awsS3Endpoint: "http://minio:9000"
  awsS3Bucket: "neon"
  awsRegion: "eu-north-1"
  pageserverStoragePathPrefix: "/pageserver/"
  safekeeperStoragePathPrefix: "/safekeeper/"
  awsAccessKeyId: "minio"
  awsSecretAccessKey: "minio123"

minio:
  create: false
  username: "minio"
  password: "minio123"

controlPanel:
  create: false

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

pageserver:
  replicaCount: 1
  image:
    repository: neondatabase/neon
    pullPolicy: IfNotPresent
    tag: "latest"
  nodeSelector: {}
  tolerations: []
  affinity: {}
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  service:
    type: ClusterIP
    port: 9898
  storage:
    size: 1Gi
    storageClass: "standard"
    accessMode: "ReadWriteOnce"

safekeeper:
  replicaCount: 3
  image:
    repository: neondatabase/neon
    pullPolicy: IfNotPresent
    tag: "latest"
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: ClusterIP
    port: 80
  storage:
    size: 1Gi
    storageClass: "standard"
    accessMode: "ReadWriteOnce"

storageBroker:
  replicaCount: 1
  image:
    repository: neondatabase/neon
    pullPolicy: IfNotPresent
    tag: "latest"
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: ClusterIP
    port: 80
  storage:
    size: 1Gi
    storageClass: "standard"
    accessMode: "ReadWriteOnce"

computeNode:
  replicaCount: 1
  image:
    repository: neondatabase/compute-node-v16
    pullPolicy: IfNotPresent
    tag: "latest"
  nodeSelector: {}
  tolerations: []
  affinity: {}
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  service:
    type: ClusterIP
    port: 80
  storage:
    size: 1Gi
    storageClass: "standard"
    accessMode: "ReadWriteOnce"